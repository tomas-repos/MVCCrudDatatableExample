@model  Asp.NETMVCCRUD.Models.Product

@{
    Layout = null;
    List<SelectListItem> itemSup = (List<SelectListItem>)ViewBag.items;
    List<SelectListItem> itemSupNoedit = (List<SelectListItem>)ViewBag.noEdit;

    List<SelectListItem> itemCateg= (List<SelectListItem>)ViewBag.itemsCateg;
    List<SelectListItem> itemCategNoEdit= (List<SelectListItem>)ViewBag.CategNoEdit;
}

@using (Html.BeginForm("AddOrEdit", "Products", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.HiddenFor(model => model.ProductID)
    <div class="form-group">
        <div class="container">
            <div class="col-md-6 ">
                @Html.Label("Nombre de Producto", new { @class = "control-label "})
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control  ", maxlength = 30 } })
                @Html.ValidationMessageFor(model => model.ProductName)
            </div>
        </div>
        <div class="container">
            <div class="col-md-3 ">
                @Html.Label("Categoria", new { @class = "control-label" })
                @if (itemCateg == null)
                {
                    @Html.DropDownListFor(model=>model.CategoryID, itemCategNoEdit, new { @class = "form-control readonly", @disabled = "disabled" })
                    
                }
                else
                {
                    @Html.DropDownListFor(model=>model.CategoryID, itemCateg, "Seleccionar", new { @class = "form-control" })
                }

            </div>
            <div class="col-md-3 ">
                @Html.Label("Proveedor", new { @class = "control-label" })
                @if (itemSup == null)
                {
                    @Html.DropDownListFor(model=>model.SupplierID, itemSupNoedit, new { @class = "form-control readonly", @disabled = "disabled" })
                }
                else
                {
                    @Html.DropDownListFor(model=>model.SupplierID, itemSup, "Seleccionar", new { @class = "form-control " })
                }
            </div>
        </div>
        <div class="container">
            <div class="col-md-3 ">
                @Html.Label("Cantidad/Unidad", new { @class = "control-label" })
                @Html.EditorFor(model => model.QuantityPerUnit, new { htmlAttributes = new { @class = "form-control ", @type = "number", maxlength = 20 } })
                @Html.ValidationMessageFor(model => model.QuantityPerUnit)
            </div>
            <div class="col-md-3 ">
                @Html.Label("Stock", new { @class = "control-label" })
                @Html.EditorFor(model => model.UnitsInStock, new { htmlAttributes = new { @class = "form-control ", @type = "number", maxlength = 15 } })
                @Html.ValidationMessageFor(model => model.UnitsInStock)
            </div>
        </div>
        @*<div class="container">
            <div class="col-md-3 ">
                @Html.Label("En orden", new { @class = "control-label" })
                @Html.EditorFor(model => model.UnitsOnOrder, new { htmlAttributes = new { @class = "form-control", @type = "number", maxlength = 13 } })
                @Html.ValidationMessageFor(model => model.UnitsOnOrder)
            </div>
            <div class="col-md-3 ">

                @Html.Label("Nivel Reorden", new { @class = "control-label" })
                @Html.EditorFor(model => model.ReorderLevel, new { htmlAttributes = new { @class = "form-control ", maxlength = 55 } })
                @Html.ValidationMessageFor(model => model.ReorderLevel)
            </div>
        </div>*@
        <div class="container">
            <div class="col-md-3 ">
                @Html.Label("Stock", new { @class = "control-label" })
                @if (Model.Discontinued)
                {
                    <label class="label label-danger">Desactivado</label>

                    @*<input type="button" name="name" id="btnActivar" value="" />*@
                }
                else
                {
                    <label class="label label-success" >Activo</label>
                }
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="container">
            <div class="col-md-6">
                <input type="submit" value="Ingresar" class="btn btn-primary" />
                <input type="reset" value="Reset" class="btn btn-default" />
            </div>
        </div>
    </div>
        <script>
            $(document).ready(function () {
                $('.alphaonly').bind('keyup blur', function () {
                    var node = $(this);
                    node.val(node.val().replace(/[^a-z]/g, ''));
                }
                );
            });

        </script>
}
